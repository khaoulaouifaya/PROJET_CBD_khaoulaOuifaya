/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-06-01 21:08:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import myP.utilConnection;

public final class formPlaning_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.util.GregorianCalendar");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("myP.utilConnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("                 <link rel=\"stylesheet\" href=\"/applicationPointage/css/style.css\">\n");
      out.write("\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\" integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\" crossorigin=\"anonymous\">\n");
      out.write("       <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\" integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\" crossorigin=\"anonymous\">\n");
      out.write("        <title>add employee Page</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("         <div class=\"container\">\n");
      out.write("         <nav class=\"navbar navbar-expand-lg navbar-light bg-info\">\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo03\" aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("    </button>\n");
      out.write("    <a class=\"navbar-brand\" href=\"/applicationPointage/jsp/pricipal.jsp\"> pointageEnligne  </a>\n");
      out.write("  \n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n");
      out.write("      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n");
      out.write("        <li class=\"nav-item active\">\n");
      out.write("            <a class=\"nav-link\" href=\"/applicationPointage/jsp/pricipal.jsp\"> HOME   <span class=\"sr-only\">(current)</span></a>\n");
      out.write("        </li>\n");
      out.write("       \n");
      out.write("      </ul>\n");
      out.write("     \n");
      out.write("       \n");
      out.write("    </div>\n");
      out.write("  </nav>\n");
      out.write("        \n");
      out.write("        \n");
      out.write("       \n");
      out.write("       \n");
      out.write(" <p style=\"color: green ;font-family: cursive;font-size: 20px;padding: 2%; float: left\" href=\"/applicationPointage/jsp/formPlaning.jsp\">\n");
      out.write("     <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i> voila c'est le planning monsuel:</p> \n");
      out.write("\n");
      out.write("           \n");
      out.write("            \n");
      out.write("     <table class=\"table\">  \n");
      out.write("    <thead class=\"thead-dark\">\n");
      out.write("    <tr>\n");
      out.write("      <th scope=\"col\">jour</th>\n");
      out.write("      <th scope=\"col\">heure debut</th>\n");
      out.write("      <th scope=\"col\">heure fin</th>\n");
      out.write("     \n");
      out.write("       <th scope=\"col\"> heure debut pause</th> \n");
      out.write("       <th scope=\"col\">heure fin pause</th>\n");
      out.write("     </tr>\n");
      out.write("  </thead>\n");
      out.write("  <tbody>\n");
      out.write("   ");

      GregorianCalendar cal = new GregorianCalendar();
     
    
      out.write("\n");
      out.write("    <tr>\n");
      out.write("        \n");
      out.write("      <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH));
      out.write("</th>\n");
      out.write("      <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("  \n");
      out.write("\n");
      out.write("    </tr>\n");
      out.write("   <tr>\n");
      out.write("        \n");
      out.write("      <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+1);
      out.write("</th>\n");
      out.write("       <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("     <tr>\n");
      out.write("      <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+2);
      out.write("</th>\n");
      out.write("       <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("    <tr>\n");
      out.write("      <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+3);
      out.write("</th>\n");
      out.write("       <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("    <tr>\n");
      out.write("     <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+4);
      out.write("</th>\n");
      out.write("       <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("     <tr>\n");
      out.write("     <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+5);
      out.write("</th>\n");
      out.write("       <td>weekend</td>\n");
      out.write("      <td>weekend</td>\n");
      out.write("      <td>weekend</td>\n");
      out.write("       <td>weekend</td>\n");
      out.write("    </tr>\n");
      out.write("     <tr>\n");
      out.write("     <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+6);
      out.write("</th>\n");
      out.write("       <td>weekend</td>\n");
      out.write("      <td>weekend</td>\n");
      out.write("      <td>weekend</td>\n");
      out.write("       <td>weekend</td>\n");
      out.write("    </tr>\n");
      out.write("      <tr>\n");
      out.write("     <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+7);
      out.write("</th>\n");
      out.write("     <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("     <tr>\n");
      out.write("     <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+8);
      out.write("</th>\n");
      out.write("    <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("     <tr>\n");
      out.write("     <th scope=\"row\"> ");
 out.print(cal.get(Calendar.YEAR));
      out.write('/');
 out.print(cal.get(Calendar.MONTH)+1);
      out.write('/');
 out.print(cal.get(Calendar.DAY_OF_MONTH)+9);
      out.write("</th>\n");
      out.write("      <td>08:30</td>\n");
      out.write("      <td>16:00</td>\n");
      out.write("      <td>12:30</td>\n");
      out.write("       <td>13:30</td>\n");
      out.write("    </tr>\n");
      out.write("  </tbody> \n");
      out.write("  \n");
      out.write("</table>\n");
      out.write("          \n");
      out.write("\n");
      out.write(" </div>\n");
      out.write("            \n");
      out.write("       \n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
